[CoverageResult [project=gson-2.8.5, className=com.google.gson.DefaultDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=145, mi=0, ci=6, mb=0, cb=0], lineCode=145, lineContent=return dateFormat.parse(s), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.DefaultDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=149, mi=0, ci=9, mb=0, cb=0], lineCode=149, lineContent=return com.google.gson.internal.bind.util.ISO8601Utils.parse(s, new java.text.ParsePosition(0)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.DefaultDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=103, mi=24, ci=0, mb=0, cb=0], lineCode=103, lineContent=throw new java.lang.IllegalArgumentException(((((((("Date type must be one of " + (java.util.Date.class)) + ", ") + (java.sql.Timestamp.class)) + ", or ") + (java.sql.Date.class)) + " but was ") + dateType)), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.DefaultDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=137, mi=4, ci=0, mb=0, cb=0], lineCode=137, lineContent=// This must never happen: dateType is guarded in the primary constructor
throw new java.lang.AssertionError(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.DefaultDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=151, mi=6, ci=0, mb=0, cb=0], lineCode=151, lineContent=throw new com.google.gson.JsonSyntaxException(s, e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.DefaultDateTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=112], lineCode=111, lineContent=write(com.google.gson.stream.JsonWriter,java.util.Date) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.DefaultDateTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=124], lineCode=123, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.FieldAttributes, coverageLine=ClassXMLCoverageLineMethod [mm=1, cm=0, getNumberLine()=150], lineCode=149, lineContent=get(java.lang.Object) throws java.lang.IllegalAccessException, , type=THROWS, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=454, mi=0, ci=4, mb=0, cb=0], lineCode=454, lineContent=com.google.gson.Gson.FutureTypeAdapter<T> call = new com.google.gson.Gson.FutureTypeAdapter<T>(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=455, mi=0, ci=5, mb=0, cb=0], lineCode=455, lineContent=threadCalls.put(type, call), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=457, mi=0, ci=11, mb=1, cb=1], lineCode=457, lineContent=for (com.google.gson.TypeAdapterFactory factory : factories) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=458, mi=0, ci=5, mb=0, cb=0], lineCode=458, lineContent=com.google.gson.TypeAdapter<T> candidate = factory.create(this, type), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=459, mi=0, ci=2, mb=0, cb=2], lineCode=459, lineContent=if (candidate != null) , type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=460, mi=0, ci=3, mb=0, cb=0], lineCode=460, lineContent=call.setDelegate(candidate), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=461, mi=0, ci=6, mb=0, cb=0], lineCode=461, lineContent=typeTokenCache.put(type, candidate), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=462, mi=0, ci=4, mb=0, cb=0], lineCode=462, lineContent=return candidate, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=467, mi=0, ci=4, mb=0, cb=0], lineCode=467, lineContent=threadCalls.remove(type), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=469, mi=0, ci=2, mb=0, cb=2], lineCode=469, lineContent=if (requiresThreadLocalCleanup) , type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=470, mi=0, ci=3, mb=0, cb=0], lineCode=470, lineContent=calls.remove(), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=682, mi=0, ci=5, mb=0, cb=0], lineCode=682, lineContent=com.google.gson.stream.JsonWriter jsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=683, mi=0, ci=5, mb=0, cb=0], lineCode=683, lineContent=toJson(src, typeOfSrc, jsonWriter), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=704, mi=0, ci=4, mb=0, cb=0], lineCode=704, lineContent=((com.google.gson.TypeAdapter<java.lang.Object>) (adapter)).write(writer, src), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=710, mi=0, ci=3, mb=0, cb=0], lineCode=710, lineContent=writer.setLenient(oldLenient), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=711, mi=0, ci=3, mb=0, cb=0], lineCode=711, lineContent=writer.setHtmlSafe(oldHtmlSafe), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=712, mi=0, ci=3, mb=0, cb=0], lineCode=712, lineContent=writer.setSerializeNulls(oldSerializeNulls), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=739, mi=0, ci=5, mb=0, cb=0], lineCode=739, lineContent=com.google.gson.stream.JsonWriter jsonWriter = newJsonWriter(com.google.gson.internal.Streams.writerForAppendable(writer)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=740, mi=0, ci=4, mb=0, cb=0], lineCode=740, lineContent=toJson(jsonElement, jsonWriter), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=782, mi=0, ci=3, mb=0, cb=0], lineCode=782, lineContent=com.google.gson.internal.Streams.write(jsonElement, writer), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=788, mi=0, ci=3, mb=0, cb=0], lineCode=788, lineContent=writer.setLenient(oldLenient), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=789, mi=0, ci=3, mb=0, cb=0], lineCode=789, lineContent=writer.setHtmlSafe(oldHtmlSafe), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=790, mi=0, ci=3, mb=0, cb=0], lineCode=790, lineContent=writer.setSerializeNulls(oldSerializeNulls), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=899, mi=0, ci=6, mb=1, cb=3], lineCode=899, lineContent=if ((obj != null) && ((reader.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT))) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=923, mi=0, ci=3, mb=0, cb=0], lineCode=923, lineContent=reader.peek(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=924, mi=0, ci=2, mb=0, cb=0], lineCode=924, lineContent=isEmpty = false, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=925, mi=0, ci=3, mb=0, cb=0], lineCode=925, lineContent=com.google.gson.reflect.TypeToken<T> typeToken = ((com.google.gson.reflect.TypeToken<T>) (com.google.gson.reflect.TypeToken.get(typeOfT))), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=926, mi=0, ci=4, mb=0, cb=0], lineCode=926, lineContent=com.google.gson.TypeAdapter<T> typeAdapter = getAdapter(typeToken), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=927, mi=0, ci=4, mb=0, cb=0], lineCode=927, lineContent=T object = typeAdapter.read(reader), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=928, mi=0, ci=4, mb=0, cb=0], lineCode=928, lineContent=return object, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=946, mi=0, ci=3, mb=0, cb=0], lineCode=946, lineContent=reader.setLenient(oldLenient), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=934, mi=0, ci=2, mb=0, cb=2], lineCode=934, lineContent=/* For compatibility with JSON 1.5 and earlier, we return null for empty
documents instead of throwing.
 */
if (
isEmpty) , type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=935, mi=0, ci=4, mb=0, cb=0], lineCode=935, lineContent=return null, type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=359, mi=0, ci=12, mb=0, cb=0], lineCode=359, lineContent=throw new java.lang.IllegalArgumentException(((value + 
" is not a valid double value as per JSON specification. To override this") + 
" behavior, use GsonBuilder.serializeSpecialFloatingPointValues() method.")), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=465, mi=12, ci=0, mb=0, cb=0], lineCode=465, lineContent=throw new java.lang.IllegalArgumentException(((("GSON (" + (com.google.gson.internal.GsonBuildConfig.VERSION)) + ") cannot handle ") + type)), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=546, mi=12, ci=0, mb=0, cb=0], lineCode=546, lineContent=throw new java.lang.IllegalArgumentException(("GSON cannot serialize " + type)), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=685, mi=5, ci=0, mb=0, cb=0], lineCode=685, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=706, mi=5, ci=0, mb=0, cb=0], lineCode=706, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=708, mi=0, ci=14, mb=0, cb=0], lineCode=708, lineContent=throw new java.lang.AssertionError(((("AssertionError (GSON " + (com.google.gson.internal.GsonBuildConfig.VERSION)) + "): ") + (e.getMessage())), e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=742, mi=5, ci=0, mb=0, cb=0], lineCode=742, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=784, mi=5, ci=0, mb=0, cb=0], lineCode=784, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=786, mi=14, ci=0, mb=0, cb=0], lineCode=786, lineContent=throw new java.lang.AssertionError(((("AssertionError (GSON " + (com.google.gson.internal.GsonBuildConfig.VERSION)) + "): ") + (e.getMessage())), e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=900, mi=5, ci=0, mb=0, cb=0], lineCode=900, lineContent=throw new com.google.gson.JsonIOException("JSON document was not fully consumed."), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=903, mi=0, ci=5, mb=0, cb=0], lineCode=903, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=905, mi=5, ci=0, mb=0, cb=0], lineCode=905, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=937, mi=0, ci=5, mb=0, cb=0], lineCode=937, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=939, mi=0, ci=5, mb=0, cb=0], lineCode=939, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=942, mi=0, ci=5, mb=0, cb=0], lineCode=942, lineContent=// TODO(inder): Figure out whether it is indeed right to rethrow this as JsonSyntaxException
throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLine [numberLine=944, mi=0, ci=14, mb=0, cb=0], lineCode=944, lineContent=throw new java.lang.AssertionError(((("AssertionError (GSON " + (com.google.gson.internal.GsonBuildConfig.VERSION)) + "): ") + (e.getMessage())), e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=657], lineCode=656, lineContent=toJson(java.lang.Object,java.lang.Appendable) throws com.google.gson.JsonIOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=682], lineCode=680, lineContent=toJson(java.lang.Object,java.lang.reflect.Type,java.lang.Appendable) throws com.google.gson.JsonIOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=696], lineCode=695, lineContent=toJson(java.lang.Object,java.lang.reflect.Type,com.google.gson.stream.JsonWriter) throws com.google.gson.JsonIOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=739], lineCode=737, lineContent=toJson(com.google.gson.JsonElement,java.lang.Appendable) throws com.google.gson.JsonIOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=750], lineCode=749, lineContent=newJsonWriter(java.io.Writer) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=775], lineCode=774, lineContent=toJson(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) throws com.google.gson.JsonIOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=813], lineCode=812, lineContent=fromJson(java.lang.String,java.lang.Class) throws com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=837], lineCode=836, lineContent=fromJson(java.lang.String,java.lang.reflect.Type) throws com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=864], lineCode=863, lineContent=fromJson(java.io.Reader,java.lang.Class) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=891], lineCode=890, lineContent=fromJson(java.io.Reader,java.lang.reflect.Type) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=919], lineCode=918, lineContent=fromJson(com.google.gson.stream.JsonReader,java.lang.reflect.Type) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=967], lineCode=966, lineContent=fromJson(com.google.gson.JsonElement,java.lang.Class) throws com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.Gson, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=991], lineCode=990, lineContent=fromJson(com.google.gson.JsonElement,java.lang.reflect.Type) throws com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=210, mi=4, ci=0, mb=0, cb=0], lineCode=210, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=226, mi=4, ci=0, mb=0, cb=0], lineCode=226, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=242, mi=4, ci=0, mb=0, cb=0], lineCode=242, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=259, mi=4, ci=0, mb=0, cb=0], lineCode=259, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=276, mi=4, ci=0, mb=0, cb=0], lineCode=276, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=292, mi=4, ci=0, mb=0, cb=0], lineCode=292, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=308, mi=4, ci=0, mb=0, cb=0], lineCode=308, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=324, mi=4, ci=0, mb=0, cb=0], lineCode=324, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=332, mi=4, ci=0, mb=0, cb=0], lineCode=332, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=340, mi=4, ci=0, mb=0, cb=0], lineCode=340, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=356, mi=4, ci=0, mb=0, cb=0], lineCode=356, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonArray, coverageLine=ClassXMLCoverageLine [numberLine=372, mi=4, ci=0, mb=0, cb=0], lineCode=372, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=322, mi=0, ci=4, mb=0, cb=0], lineCode=322, lineContent=java.io.StringWriter stringWriter = new java.io.StringWriter(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=323, mi=0, ci=5, mb=0, cb=0], lineCode=323, lineContent=com.google.gson.stream.JsonWriter jsonWriter = new com.google.gson.stream.JsonWriter(stringWriter), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=324, mi=0, ci=3, mb=0, cb=0], lineCode=324, lineContent=jsonWriter.setLenient(true), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=325, mi=0, ci=3, mb=0, cb=0], lineCode=325, lineContent=com.google.gson.internal.Streams.write(this, jsonWriter), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=326, mi=0, ci=3, mb=0, cb=0], lineCode=326, lineContent=return stringWriter.toString(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=91, mi=12, ci=0, mb=0, cb=0], lineCode=91, lineContent=throw new java.lang.IllegalStateException(("Not a JSON Object: " + (this))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=107, mi=12, ci=0, mb=0, cb=0], lineCode=107, lineContent=throw new java.lang.IllegalStateException(("Not a JSON Array: " + (this))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=123, mi=12, ci=0, mb=0, cb=0], lineCode=123, lineContent=throw new java.lang.IllegalStateException(("Not a JSON Primitive: " + (this))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=140, mi=12, ci=0, mb=0, cb=0], lineCode=140, lineContent=throw new java.lang.IllegalStateException(("Not a JSON Null: " + (this))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=153, mi=7, ci=0, mb=0, cb=0], lineCode=153, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=166, mi=7, ci=0, mb=0, cb=0], lineCode=166, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=179, mi=7, ci=0, mb=0, cb=0], lineCode=179, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=192, mi=7, ci=0, mb=0, cb=0], lineCode=192, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=205, mi=7, ci=0, mb=0, cb=0], lineCode=205, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=218, mi=7, ci=0, mb=0, cb=0], lineCode=218, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=231, mi=7, ci=0, mb=0, cb=0], lineCode=231, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=244, mi=7, ci=0, mb=0, cb=0], lineCode=244, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=258, mi=7, ci=0, mb=0, cb=0], lineCode=258, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=272, mi=7, ci=0, mb=0, cb=0], lineCode=272, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=286, mi=7, ci=0, mb=0, cb=0], lineCode=286, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=300, mi=7, ci=0, mb=0, cb=0], lineCode=300, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=313, mi=7, ci=0, mb=0, cb=0], lineCode=313, lineContent=throw new java.lang.UnsupportedOperationException(getClass().getSimpleName()), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonElement, coverageLine=ClassXMLCoverageLine [numberLine=328, mi=5, ci=0, mb=0, cb=0], lineCode=328, lineContent=throw new java.lang.AssertionError(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=58, mi=0, ci=5, mb=0, cb=0], lineCode=58, lineContent=com.google.gson.stream.JsonReader jsonReader = new com.google.gson.stream.JsonReader(json), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=59, mi=0, ci=4, mb=0, cb=0], lineCode=59, lineContent=com.google.gson.JsonElement element = parse(jsonReader), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=60, mi=0, ci=7, mb=1, cb=3], lineCode=60, lineContent=if ((!(element.isJsonNull())) && ((jsonReader.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT))) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=63, mi=0, ci=2, mb=0, cb=0], lineCode=63, lineContent=return element, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=84, mi=0, ci=5, mb=0, cb=0], lineCode=84, lineContent=return com.google.gson.internal.Streams.parse(json), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=90, mi=0, ci=3, mb=0, cb=0], lineCode=90, lineContent=json.setLenient(lenient), type=FINALLY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=61, mi=5, ci=0, mb=0, cb=0], lineCode=61, lineContent=throw new com.google.gson.JsonSyntaxException("Did not consume the entire document."), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=65, mi=0, ci=5, mb=0, cb=0], lineCode=65, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=67, mi=5, ci=0, mb=0, cb=0], lineCode=67, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=69, mi=5, ci=0, mb=0, cb=0], lineCode=69, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=86, mi=15, ci=0, mb=0, cb=0], lineCode=86, lineContent=throw new com.google.gson.JsonParseException((("Failed parsing JSON source: " + json) + " to Json"), e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLine [numberLine=88, mi=15, ci=0, mb=0, cb=0], lineCode=88, lineContent=throw new com.google.gson.JsonParseException((("Failed parsing JSON source: " + json) + " to Json"), e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=45], lineCode=44, lineContent=parse(java.lang.String) throws com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=58], lineCode=56, lineContent=parse(java.io.Reader) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonParser, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=81], lineCode=80, lineContent=parse(com.google.gson.stream.JsonReader) throws com.google.gson.JsonIOException, com.google.gson.JsonSyntaxException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=87, mi=0, ci=4, mb=0, cb=0], lineCode=87, lineContent=return com.google.gson.internal.Streams.parse(parser), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=105, mi=0, ci=11, mb=0, cb=2], lineCode=105, lineContent=return (parser.peek()) != (com.google.gson.stream.JsonToken.END_DOCUMENT), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=83, mi=0, ci=4, mb=0, cb=0], lineCode=83, lineContent=throw new java.util.NoSuchElementException(), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=89, mi=6, ci=0, mb=0, cb=0], lineCode=89, lineContent=throw new com.google.gson.JsonParseException("Failed parsing JSON source to Json", e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=91, mi=6, ci=0, mb=0, cb=0], lineCode=91, lineContent=throw new com.google.gson.JsonParseException("Failed parsing JSON source to Json", e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=93, mi=10, ci=0, mb=2, cb=0], lineCode=93, lineContent=throw (e.getCause()) instanceof java.io.EOFException ? new java.util.NoSuchElementException() : e, type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=107, mi=5, ci=0, mb=0, cb=0], lineCode=107, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=109, mi=5, ci=0, mb=0, cb=0], lineCode=109, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLine [numberLine=120, mi=4, ci=0, mb=0, cb=0], lineCode=120, lineContent=throw new java.lang.UnsupportedOperationException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.JsonStreamParser, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=82], lineCode=81, lineContent=next() throws com.google.gson.JsonParseException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=217, mi=0, ci=4, mb=0, cb=0], lineCode=217, lineContent=toJson(stringWriter, value), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=233, mi=0, ci=4, mb=0, cb=0], lineCode=233, lineContent=com.google.gson.internal.bind.JsonTreeWriter jsonWriter = new com.google.gson.internal.bind.JsonTreeWriter(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=234, mi=0, ci=4, mb=0, cb=0], lineCode=234, lineContent=write(jsonWriter, value), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=235, mi=0, ci=3, mb=0, cb=0], lineCode=235, lineContent=return jsonWriter.get(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=284, mi=0, ci=5, mb=0, cb=0], lineCode=284, lineContent=com.google.gson.stream.JsonReader jsonReader = new com.google.gson.internal.bind.JsonTreeReader(jsonTree), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=285, mi=0, ci=4, mb=0, cb=0], lineCode=285, lineContent=return read(jsonReader), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=219, mi=5, ci=0, mb=0, cb=0], lineCode=219, lineContent=throw new java.lang.AssertionError(e)// No I/O writing to a StringWriter.
, type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=237, mi=5, ci=0, mb=0, cb=0], lineCode=237, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=287, mi=5, ci=0, mb=0, cb=0], lineCode=287, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=141], lineCode=140, lineContent=toJson(java.io.Writer,java.lang.Object) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=259], lineCode=258, lineContent=fromJson(java.io.Reader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.TypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=273], lineCode=272, lineContent=fromJson(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.$Gson$Preconditions, coverageLine=ClassXMLCoverageLine [numberLine=34, mi=4, ci=0, mb=0, cb=0], lineCode=34, lineContent=throw new java.lang.UnsupportedOperationException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.$Gson$Preconditions, coverageLine=ClassXMLCoverageLine [numberLine=39, mi=0, ci=4, mb=0, cb=0], lineCode=39, lineContent=throw new java.lang.NullPointerException(), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.$Gson$Preconditions, coverageLine=ClassXMLCoverageLine [numberLine=46, mi=0, ci=4, mb=0, cb=0], lineCode=46, lineContent=throw new java.lang.IllegalArgumentException(), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.$Gson$Types, coverageLine=ClassXMLCoverageLine [numberLine=43, mi=4, ci=0, mb=0, cb=0], lineCode=43, lineContent=throw new java.lang.UnsupportedOperationException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.$Gson$Types, coverageLine=ClassXMLCoverageLine [numberLine=156, mi=16, ci=0, mb=0, cb=0], lineCode=156, lineContent=throw new java.lang.IllegalArgumentException((((("Expected a Class, ParameterizedType, or " + 
"GenericArrayType, but <") + type) + "> is of type ") + className)), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.$Gson$Types, coverageLine=ClassXMLCoverageLine [numberLine=442, mi=4, ci=0, mb=0, cb=0], lineCode=442, lineContent=throw new java.util.NoSuchElementException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.ConstructorConstructor, coverageLine=ClassXMLCoverageLine [numberLine=101, mi=0, ci=5, mb=0, cb=0], lineCode=101, lineContent=final java.lang.reflect.Constructor<? super T> constructor = rawType.getDeclaredConstructor(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.ConstructorConstructor, coverageLine=ClassXMLCoverageLine [numberLine=102, mi=0, ci=3, mb=1, cb=1], lineCode=102, lineContent=if (!(constructor.isAccessible())) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.ConstructorConstructor, coverageLine=ClassXMLCoverageLine [numberLine=105, mi=0, ci=15, mb=0, cb=0], lineCode=105, lineContent=return new com.google.gson.internal.ObjectConstructor<T>() {
    // T is the same raw type as is requested     @java.lang.SuppressWarnings("unchecked")
    @java.lang.Override     public T construct() {
        try {
            java.lang.Object[] args = null;
            return ((T) (constructor.newInstance(args)));
        } catch (java.lang.InstantiationException e) {
            // TODO: JsonParseException ?
            throw new java.lang.RuntimeException((("Failed to invoke " + constructor) + " with no args"), e);
        } catch (java.lang.reflect.InvocationTargetException e) {
            // TODO: don't wrap if cause is unchecked!
            // TODO: JsonParseException ?
            throw new java.lang.RuntimeException((("Failed to invoke " + constructor) + " with no args"), 
            e.getTargetException());
        } catch (java.lang.IllegalAccessException e) {
            throw new java.lang.AssertionError(e);
        }
    }
}, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.ConstructorConstructor, coverageLine=ClassXMLCoverageLine [numberLine=103, mi=0, ci=4, mb=0, cb=0], lineCode=103, lineContent=accessor.makeAccessible(constructor), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.ConstructorConstructor, coverageLine=ClassXMLCoverageLine [numberLine=109, mi=0, ci=2, mb=0, cb=0], lineCode=109, lineContent=java.lang.Object[] args = null, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.ConstructorConstructor, coverageLine=ClassXMLCoverageLine [numberLine=110, mi=0, ci=5, mb=0, cb=0], lineCode=110, lineContent=return ((T) (constructor.newInstance(args))), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.ConstructorConstructor, coverageLine=ClassXMLCoverageLine [numberLine=125, mi=0, ci=2, mb=0, cb=0], lineCode=125, lineContent=return null, type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Excluder, coverageLine=ClassXMLCoverageLine [numberLine=63, mi=0, ci=4, mb=0, cb=0], lineCode=63, lineContent=return ((com.google.gson.internal.Excluder) (super.clone())), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Excluder, coverageLine=ClassXMLCoverageLine [numberLine=65, mi=5, ci=0, mb=0, cb=0], lineCode=65, lineContent=throw new java.lang.AssertionError(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=48, mi=0, ci=4, mb=0, cb=0], lineCode=48, lineContent=java.lang.String[] parts = javaVersion.split("[._]"), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=49, mi=0, ci=5, mb=0, cb=0], lineCode=49, lineContent=int firstVer = java.lang.Integer.parseInt(parts[0]), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=50, mi=0, ci=7, mb=1, cb=3], lineCode=50, lineContent=if ((firstVer == 1) && ((parts.length) > 1))   , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=51, mi=0, ci=5, mb=0, cb=0], lineCode=51, lineContent=return java.lang.Integer.parseInt(parts[1]), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=53, mi=0, ci=2, mb=0, cb=0], lineCode=53, lineContent=return firstVer, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=56, mi=0, ci=2, mb=0, cb=0], lineCode=56, lineContent=return -1, type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=62, mi=0, ci=4, mb=0, cb=0], lineCode=62, lineContent=java.lang.StringBuilder num = new java.lang.StringBuilder(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=63, mi=0, ci=8, mb=1, cb=1], lineCode=63, lineContent=for (int i = 0; i < (javaVersion.length()); ++i) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=71, mi=0, ci=4, mb=0, cb=0], lineCode=71, lineContent=return java.lang.Integer.parseInt(num.toString()), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=64, mi=0, ci=4, mb=0, cb=0], lineCode=64, lineContent=char c = javaVersion.charAt(i), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=65, mi=0, ci=3, mb=0, cb=2], lineCode=65, lineContent=if (java.lang.Character.isDigit(c))   , type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=66, mi=0, ci=4, mb=0, cb=0], lineCode=66, lineContent=num.append(c), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.JavaVersion, coverageLine=ClassXMLCoverageLine [numberLine=73, mi=0, ci=2, mb=0, cb=0], lineCode=73, lineContent=return -1, type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLine [numberLine=37, mi=0, ci=4, mb=0, cb=0], lineCode=37, lineContent=return java.lang.Integer.parseInt(value), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLine [numberLine=40, mi=5, ci=0, mb=0, cb=0], lineCode=40, lineContent=return ((int) (java.lang.Long.parseLong(value))), type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLine [numberLine=42, mi=7, ci=0, mb=0, cb=0], lineCode=42, lineContent=return new java.math.BigDecimal(value).intValue(), type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLine [numberLine=40, mi=5, ci=0, mb=0, cb=0], lineCode=40, lineContent=return ((int) (java.lang.Long.parseLong(value))), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLine [numberLine=42, mi=7, ci=0, mb=0, cb=0], lineCode=42, lineContent=return new java.math.BigDecimal(value).intValue(), type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLine [numberLine=50, mi=0, ci=4, mb=0, cb=0], lineCode=50, lineContent=return java.lang.Long.parseLong(value), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLine [numberLine=52, mi=0, ci=7, mb=0, cb=0], lineCode=52, lineContent=return new java.math.BigDecimal(value).longValue(), type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LazilyParsedNumber, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=77], lineCode=76, lineContent=writeReplace() throws java.io.ObjectStreamException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedHashTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=202, mi=0, ci=9, mb=0, cb=2], lineCode=202, lineContent=return key != null ? find(((K) (key)), false) : null, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedHashTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=204, mi=0, ci=2, mb=0, cb=0], lineCode=204, lineContent=return null, type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedHashTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=96, mi=0, ci=5, mb=0, cb=0], lineCode=96, lineContent=throw new java.lang.NullPointerException("key == null"), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedHashTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=177, mi=0, ci=14, mb=0, cb=0], lineCode=177, lineContent=throw new java.lang.ClassCastException(((key.getClass().getName()) + " is not Comparable")), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedHashTreeMap, coverageLine=ClassXMLCoverageLineMethod [mm=1, cm=0, getNumberLine()=862], lineCode=861, lineContent=writeReplace() throws java.io.ObjectStreamException, , type=THROWS, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=186, mi=0, ci=9, mb=0, cb=2], lineCode=186, lineContent=return key != null ? find(((K) (key)), false) : null, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=188, mi=0, ci=2, mb=0, cb=0], lineCode=188, lineContent=return null, type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=92, mi=0, ci=5, mb=0, cb=0], lineCode=92, lineContent=throw new java.lang.NullPointerException("key == null"), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedTreeMap, coverageLine=ClassXMLCoverageLine [numberLine=164, mi=0, ci=14, mb=0, cb=0], lineCode=164, lineContent=throw new java.lang.ClassCastException(((key.getClass().getName()) + " is not Comparable")), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.LinkedTreeMap, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=628], lineCode=627, lineContent=writeReplace() throws java.io.ObjectStreamException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.PreJava9DateFormatProvider, coverageLine=ClassXMLCoverageLine [numberLine=54, mi=12, ci=0, mb=0, cb=0], lineCode=54, lineContent=throw new java.lang.IllegalArgumentException(("Unknown DateFormat style: " + style)), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.PreJava9DateFormatProvider, coverageLine=ClassXMLCoverageLine [numberLine=69, mi=12, ci=0, mb=0, cb=0], lineCode=69, lineContent=throw new java.lang.IllegalArgumentException(("Unknown DateFormat style: " + dateStyle)), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.PreJava9DateFormatProvider, coverageLine=ClassXMLCoverageLine [numberLine=83, mi=12, ci=0, mb=0, cb=0], lineCode=83, lineContent=throw new java.lang.IllegalArgumentException(("Unknown DateFormat style: " + timeStyle)), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Primitives, coverageLine=ClassXMLCoverageLine [numberLine=33, mi=4, ci=0, mb=0, cb=0], lineCode=33, lineContent=throw new java.lang.UnsupportedOperationException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=46, mi=0, ci=3, mb=0, cb=0], lineCode=46, lineContent=reader.peek(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=47, mi=0, ci=2, mb=0, cb=0], lineCode=47, lineContent=isEmpty = false, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=48, mi=0, ci=5, mb=0, cb=0], lineCode=48, lineContent=return com.google.gson.internal.bind.TypeAdapters.JSON_ELEMENT.read(reader), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=54, mi=0, ci=2, mb=0, cb=2], lineCode=54, lineContent=/* For compatibility with JSON 1.5 and earlier, we return a JsonNull for
empty documents instead of throwing.
 */
if (
isEmpty) , type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=55, mi=0, ci=2, mb=0, cb=0], lineCode=55, lineContent=return com.google.gson.JsonNull.INSTANCE, type=CATCH, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=37, mi=4, ci=0, mb=0, cb=0], lineCode=37, lineContent=throw new java.lang.UnsupportedOperationException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=58, mi=0, ci=5, mb=0, cb=0], lineCode=58, lineContent=// The stream ended prematurely so it is likely a syntax error.
throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=60, mi=5, ci=0, mb=0, cb=0], lineCode=60, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=62, mi=5, ci=0, mb=0, cb=0], lineCode=62, lineContent=throw new com.google.gson.JsonIOException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLine [numberLine=64, mi=5, ci=0, mb=0, cb=0], lineCode=64, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=44], lineCode=43, lineContent=parse(com.google.gson.stream.JsonReader) throws com.google.gson.JsonParseException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.Streams, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=72], lineCode=71, lineContent=write(com.google.gson.JsonElement,com.google.gson.stream.JsonWriter) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=40, mi=0, ci=3, mb=0, cb=0], lineCode=40, lineContent=java.lang.Class<?> unsafeClass = java.lang.Class.forName("sun.misc.Unsafe"), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=41, mi=0, ci=4, mb=0, cb=0], lineCode=41, lineContent=java.lang.reflect.Field f = unsafeClass.getDeclaredField("theUnsafe"), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=42, mi=0, ci=3, mb=0, cb=0], lineCode=42, lineContent=f.setAccessible(true), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=43, mi=0, ci=4, mb=0, cb=0], lineCode=43, lineContent=final java.lang.Object unsafe = f.get(null), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=44, mi=0, ci=10, mb=0, cb=0], lineCode=44, lineContent=final java.lang.reflect.Method allocateInstance = unsafeClass.getMethod("allocateInstance", java.lang.Class.class), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=45, mi=0, ci=15, mb=0, cb=0], lineCode=45, lineContent=return new com.google.gson.internal.UnsafeAllocator() {
    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public <T> T newInstance(java.lang.Class<T> c) throws java.lang.Exception {
        com.google.gson.internal.UnsafeAllocator.assertInstantiable(c);
        return ((T) (allocateInstance.invoke(unsafe, c)));
    }
}, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=49, mi=0, ci=2, mb=0, cb=0], lineCode=49, lineContent=com.google.gson.internal.UnsafeAllocator.assertInstantiable(c), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=50, mi=0, ci=12, mb=0, cb=0], lineCode=50, lineContent=return ((T) (allocateInstance.invoke(unsafe, c))), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=62, mi=8, ci=0, mb=0, cb=0], lineCode=62, lineContent=java.lang.reflect.Method getConstructorId = java.io.ObjectStreamClass.class.getDeclaredMethod(
"getConstructorId", java.lang.Class.class), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=64, mi=3, ci=0, mb=0, cb=0], lineCode=64, lineContent=getConstructorId.setAccessible(true), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=65, mi=12, ci=0, mb=0, cb=0], lineCode=65, lineContent=final int constructorId = ((java.lang.Integer) (getConstructorId.invoke(null, java.lang.Object.class))), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=66, mi=12, ci=0, mb=0, cb=0], lineCode=66, lineContent=final java.lang.reflect.Method newInstance = java.io.ObjectStreamClass.class.getDeclaredMethod(
"newInstance", java.lang.Class.class, int.class), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=68, mi=3, ci=0, mb=0, cb=0], lineCode=68, lineContent=newInstance.setAccessible(true), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=69, mi=15, ci=0, mb=0, cb=0], lineCode=69, lineContent=return new com.google.gson.internal.UnsafeAllocator() {
    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public <T> T newInstance(java.lang.Class<T> c) throws java.lang.Exception {
        com.google.gson.internal.UnsafeAllocator.assertInstantiable(c);
        return ((T) (newInstance.invoke(null, c, constructorId)));
    }
}, type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=73, mi=2, ci=0, mb=0, cb=0], lineCode=73, lineContent=com.google.gson.internal.UnsafeAllocator.assertInstantiable(c), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=74, mi=17, ci=0, mb=0, cb=0], lineCode=74, lineContent=return ((T) (newInstance.invoke(null, c, constructorId))), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=86, mi=12, ci=0, mb=0, cb=0], lineCode=86, lineContent=final java.lang.reflect.Method newInstance = java.io.ObjectInputStream.class.getDeclaredMethod(
"newInstance", java.lang.Class.class, java.lang.Class.class), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=88, mi=3, ci=0, mb=0, cb=0], lineCode=88, lineContent=newInstance.setAccessible(true), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=89, mi=11, ci=0, mb=0, cb=0], lineCode=89, lineContent=return new com.google.gson.internal.UnsafeAllocator() {
    @java.lang.Override
    @java.lang.SuppressWarnings("unchecked")
    public <T> T newInstance(java.lang.Class<T> c) throws java.lang.Exception {
        com.google.gson.internal.UnsafeAllocator.assertInstantiable(c);
        return ((T) (newInstance.invoke(null, c, java.lang.Object.class)));
    }
}, type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=93, mi=2, ci=0, mb=0, cb=0], lineCode=93, lineContent=com.google.gson.internal.UnsafeAllocator.assertInstantiable(c), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=94, mi=15, ci=0, mb=0, cb=0], lineCode=94, lineContent=return ((T) (newInstance.invoke(null, c, java.lang.Object.class))), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=117, mi=0, ci=13, mb=0, cb=0], lineCode=117, lineContent=throw new java.lang.UnsupportedOperationException(("Interface can't be instantiated! Interface name: " + (c.getName()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.UnsafeAllocator, coverageLine=ClassXMLCoverageLine [numberLine=120, mi=0, ci=13, mb=0, cb=0], lineCode=120, lineContent=throw new java.lang.UnsupportedOperationException(("Abstract class can't be instantiated! Class name: " + (c.getName()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.ArrayTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=64], lineCode=63, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.ArrayTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=87], lineCode=86, lineContent=write(com.google.gson.stream.JsonWriter,java.lang.Object) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.DateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=81, mi=0, ci=4, mb=0, cb=0], lineCode=81, lineContent=return dateFormat.parse(json), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.DateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=85, mi=7, ci=0, mb=0, cb=0], lineCode=85, lineContent=return com.google.gson.internal.bind.util.ISO8601Utils.parse(json, new java.text.ParsePosition(0)), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.DateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=87, mi=6, ci=0, mb=0, cb=0], lineCode=87, lineContent=throw new com.google.gson.JsonSyntaxException(json, e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.DateTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=71], lineCode=70, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.DateTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=92], lineCode=91, lineContent=write(com.google.gson.stream.JsonWriter,java.util.Date) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonAdapterAnnotationTypeAdapterFactory, coverageLine=ClassXMLCoverageLine [numberLine=71, mi=0, ci=8, mb=0, cb=0], lineCode=71, lineContent=throw new java.lang.IllegalArgumentException(((((("Invalid attempt to bind an instance of " + 
(instance.getClass().getName())) + " as a @JsonAdapter for ") + (type.toString())) + 
". @JsonAdapter value must be a TypeAdapter, TypeAdapterFactory,") + 
" JsonSerializer or JsonDeserializer.")), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=138, mi=4, ci=0, mb=0, cb=0], lineCode=138, lineContent=throw new java.lang.AssertionError(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=143, mi=0, ci=5, mb=0, cb=0], lineCode=143, lineContent=throw new java.lang.IllegalStateException("JsonReader is closed"), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=145, mi=4, ci=0, mb=0, cb=0], lineCode=145, lineContent=throw new java.lang.AssertionError(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=161, mi=0, ci=12, mb=0, cb=0], lineCode=161, lineContent=throw new java.lang.IllegalStateException(
(((("Expected " + expected) + " but was ") + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=179, mi=0, ci=14, mb=0, cb=0], lineCode=179, lineContent=throw new java.lang.IllegalStateException(
(((("Expected " + (com.google.gson.stream.JsonToken.STRING)) + " but was ") + token) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=209, mi=0, ci=14, mb=0, cb=0], lineCode=209, lineContent=throw new java.lang.IllegalStateException(
(((("Expected " + (com.google.gson.stream.JsonToken.NUMBER)) + " but was ") + token) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=214, mi=0, ci=12, mb=0, cb=0], lineCode=214, lineContent=throw new java.lang.NumberFormatException(("JSON forbids NaN and infinities: " + result)), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=226, mi=0, ci=14, mb=0, cb=0], lineCode=226, lineContent=throw new java.lang.IllegalStateException(
(((("Expected " + (com.google.gson.stream.JsonToken.NUMBER)) + " but was ") + token) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLine [numberLine=240, mi=0, ci=14, mb=0, cb=0], lineCode=240, lineContent=throw new java.lang.IllegalStateException(
(((("Expected " + (com.google.gson.stream.JsonToken.NUMBER)) + " but was ") + token) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=71], lineCode=70, lineContent=beginArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=78], lineCode=77, lineContent=endArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=87], lineCode=86, lineContent=beginObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=93], lineCode=92, lineContent=endObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=102], lineCode=101, lineContent=hasNext() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=107], lineCode=106, lineContent=peek() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=160], lineCode=159, lineContent=expect(com.google.gson.stream.JsonToken) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=167], lineCode=166, lineContent=nextName() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=177], lineCode=176, lineContent=nextString() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=190], lineCode=189, lineContent=nextBoolean() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=199], lineCode=198, lineContent=nextNull() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=207], lineCode=206, lineContent=nextDouble() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=224], lineCode=223, lineContent=nextLong() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=238], lineCode=237, lineContent=nextInt() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=252], lineCode=251, lineContent=close() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=257], lineCode=256, lineContent=skipValue() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=276], lineCode=275, lineContent=promoteNameToValue() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=66, mi=13, ci=0, mb=0, cb=0], lineCode=66, lineContent=throw new java.lang.IllegalStateException(("Expected one JSON element but was " + (stack))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=89, mi=0, ci=4, mb=0, cb=0], lineCode=89, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=103, mi=4, ci=0, mb=0, cb=0], lineCode=103, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=110, mi=4, ci=0, mb=0, cb=0], lineCode=110, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=122, mi=4, ci=0, mb=0, cb=0], lineCode=122, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=129, mi=4, ci=0, mb=0, cb=0], lineCode=129, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=134, mi=4, ci=0, mb=0, cb=0], lineCode=134, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=141, mi=4, ci=0, mb=0, cb=0], lineCode=141, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=172, mi=0, ci=12, mb=0, cb=0], lineCode=172, lineContent=throw new java.lang.IllegalArgumentException(("JSON forbids NaN and infinities: " + value)), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=191, mi=0, ci=12, mb=0, cb=0], lineCode=191, lineContent=throw new java.lang.IllegalArgumentException(("JSON forbids NaN and infinities: " + value)), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLine [numberLine=204, mi=0, ci=5, mb=0, cb=0], lineCode=204, lineContent=throw new java.io.IOException("Incomplete document"), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=95], lineCode=94, lineContent=beginArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=102], lineCode=101, lineContent=endArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=114], lineCode=113, lineContent=beginObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=121], lineCode=120, lineContent=endObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=133], lineCode=132, lineContent=name(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=145], lineCode=144, lineContent=value(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=153], lineCode=152, lineContent=nullValue() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=1, cm=0, getNumberLine()=158], lineCode=157, lineContent=value(boolean) throws java.io.IOException, , type=THROWS, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=163], lineCode=162, lineContent=value(java.lang.Boolean) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=171], lineCode=170, lineContent=value(double) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=179], lineCode=178, lineContent=value(long) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=184], lineCode=183, lineContent=value(java.lang.Number) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=1, cm=0, getNumberLine()=200], lineCode=199, lineContent=flush() throws java.io.IOException, , type=THROWS, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.JsonTreeWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=203], lineCode=202, lineContent=close() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.ObjectTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=89, mi=4, ci=0, mb=0, cb=0], lineCode=89, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.ObjectTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=55], lineCode=54, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.ObjectTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=95], lineCode=94, lineContent=write(com.google.gson.stream.JsonWriter,java.lang.Object) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.ReflectiveTypeAdapterFactory, coverageLine=ClassXMLCoverageLine [numberLine=172, mi=0, ci=15, mb=0, cb=0], lineCode=172, lineContent=throw new java.lang.IllegalArgumentException(((declaredType + 
" declares multiple JSON fields named ") + (previous.name))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.SqlDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=56, mi=0, ci=7, mb=0, cb=0], lineCode=56, lineContent=final long utilDate = format.parse(in.nextString()).getTime(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.SqlDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=57, mi=0, ci=5, mb=0, cb=0], lineCode=57, lineContent=return new java.sql.Date(utilDate), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.SqlDateTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=59, mi=5, ci=0, mb=0, cb=0], lineCode=59, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.SqlDateTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=51], lineCode=50, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.SqlDateTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=65], lineCode=64, lineContent=write(com.google.gson.stream.JsonWriter,java.sql.Date) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TimeTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=56, mi=0, ci=6, mb=0, cb=0], lineCode=56, lineContent=java.util.Date date = format.parse(in.nextString()), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TimeTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=57, mi=0, ci=6, mb=0, cb=0], lineCode=57, lineContent=return new java.sql.Time(date.getTime()), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TimeTypeAdapter, coverageLine=ClassXMLCoverageLine [numberLine=59, mi=5, ci=0, mb=0, cb=0], lineCode=59, lineContent=throw new com.google.gson.JsonSyntaxException(e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TimeTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=51], lineCode=50, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TimeTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=64], lineCode=63, lineContent=write(com.google.gson.stream.JsonWriter,java.sql.Time) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TreeTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=62], lineCode=61, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TreeTypeAdapter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=73], lineCode=72, lineContent=write(com.google.gson.stream.JsonWriter,java.lang.Object) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=41], lineCode=40, lineContent=read(com.google.gson.stream.JsonReader) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TypeAdapterRuntimeTypeWrapper, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=53], lineCode=46, lineContent=write(com.google.gson.stream.JsonWriter,java.lang.Object) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.TypeAdapters, coverageLine=ClassXMLCoverageLine [numberLine=65, mi=4, ci=0, mb=0, cb=0], lineCode=65, lineContent=throw new java.lang.UnsupportedOperationException(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=126, mi=0, ci=3, mb=0, cb=0], lineCode=126, lineContent=int offset = pos.getIndex(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=129, mi=0, ci=6, mb=0, cb=0], lineCode=129, lineContent=// extract year
int year = com.google.gson.internal.bind.util.ISO8601Utils.parseInt(date, offset, (offset += 4)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=130, mi=0, ci=5, mb=1, cb=1], lineCode=130, lineContent=if (com.google.gson.internal.bind.util.ISO8601Utils.checkOffset(date, offset, '-')) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=135, mi=0, ci=6, mb=0, cb=0], lineCode=135, lineContent=// extract month
int month = com.google.gson.internal.bind.util.ISO8601Utils.parseInt(date, offset, (offset += 2)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=136, mi=0, ci=5, mb=1, cb=1], lineCode=136, lineContent=if (com.google.gson.internal.bind.util.ISO8601Utils.checkOffset(date, offset, '-')) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=141, mi=0, ci=6, mb=0, cb=0], lineCode=141, lineContent=// extract day
int day = com.google.gson.internal.bind.util.ISO8601Utils.parseInt(date, offset, (offset += 2)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=143, mi=0, ci=2, mb=0, cb=0], lineCode=143, lineContent=// default time value
int hour = 0, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=144, mi=0, ci=2, mb=0, cb=0], lineCode=144, lineContent=int minutes = 0, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=145, mi=0, ci=2, mb=0, cb=0], lineCode=145, lineContent=int seconds = 0, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=146, mi=0, ci=2, mb=0, cb=0], lineCode=146, lineContent=int milliseconds = 0// always use 0 otherwise returned date will include millis of current time
, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=149, mi=0, ci=5, mb=0, cb=0], lineCode=149, lineContent=// if the value has no time component (and no time zone), we are done
boolean hasT = com.google.gson.internal.bind.util.ISO8601Utils.checkOffset(date, offset, 'T'), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=151, mi=4, ci=2, mb=3, cb=1], lineCode=151, lineContent=if ((!hasT) && ((date.length()) <= offset)) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=158, mi=0, ci=2, mb=1, cb=1], lineCode=158, lineContent=if (hasT) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=200, mi=0, ci=4, mb=1, cb=1], lineCode=200, lineContent=// extract timezone
if ((date.length()) <= offset) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=204, mi=0, ci=2, mb=0, cb=0], lineCode=204, lineContent=java.util.TimeZone timezone = null, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=205, mi=0, ci=4, mb=0, cb=0], lineCode=205, lineContent=char timezoneIndicator = date.charAt(offset), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=207, mi=0, ci=3, mb=0, cb=2], lineCode=207, lineContent=if (timezoneIndicator == 'Z')       , type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=248, mi=0, ci=5, mb=0, cb=0], lineCode=248, lineContent=java.util.Calendar calendar = new java.util.GregorianCalendar(timezone), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=249, mi=0, ci=3, mb=0, cb=0], lineCode=249, lineContent=calendar.setLenient(false), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=250, mi=0, ci=4, mb=0, cb=0], lineCode=250, lineContent=calendar.set(java.util.Calendar.YEAR, year), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=251, mi=0, ci=6, mb=0, cb=0], lineCode=251, lineContent=calendar.set(java.util.Calendar.MONTH, (month - 1)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=252, mi=0, ci=4, mb=0, cb=0], lineCode=252, lineContent=calendar.set(java.util.Calendar.DAY_OF_MONTH, day), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=253, mi=0, ci=4, mb=0, cb=0], lineCode=253, lineContent=calendar.set(java.util.Calendar.HOUR_OF_DAY, hour), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=254, mi=0, ci=4, mb=0, cb=0], lineCode=254, lineContent=calendar.set(java.util.Calendar.MINUTE, minutes), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=255, mi=0, ci=4, mb=0, cb=0], lineCode=255, lineContent=calendar.set(java.util.Calendar.SECOND, seconds), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=256, mi=0, ci=4, mb=0, cb=0], lineCode=256, lineContent=calendar.set(java.util.Calendar.MILLISECOND, milliseconds), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=258, mi=0, ci=3, mb=0, cb=0], lineCode=258, lineContent=pos.setIndex(offset), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=259, mi=0, ci=3, mb=0, cb=0], lineCode=259, lineContent=return calendar.getTime(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=131, mi=0, ci=1, mb=0, cb=0], lineCode=131, lineContent=offset += 1, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=137, mi=0, ci=1, mb=0, cb=0], lineCode=137, lineContent=offset += 1, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=152, mi=9, ci=0, mb=0, cb=0], lineCode=152, lineContent=java.util.Calendar calendar = new java.util.GregorianCalendar(year, (month - 1), day), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=154, mi=3, ci=0, mb=0, cb=0], lineCode=154, lineContent=pos.setIndex(offset), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=155, mi=3, ci=0, mb=0, cb=0], lineCode=155, lineContent=return calendar.getTime(), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=161, mi=0, ci=7, mb=0, cb=0], lineCode=161, lineContent=// extract hours, minutes, seconds and milliseconds
hour = com.google.gson.internal.bind.util.ISO8601Utils.parseInt(date, (offset += 1), (offset += 2)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=162, mi=0, ci=5, mb=1, cb=1], lineCode=162, lineContent=if (com.google.gson.internal.bind.util.ISO8601Utils.checkOffset(date, offset, ':')) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=166, mi=0, ci=6, mb=0, cb=0], lineCode=166, lineContent=minutes = com.google.gson.internal.bind.util.ISO8601Utils.parseInt(date, offset, (offset += 2)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=167, mi=0, ci=5, mb=0, cb=2], lineCode=167, lineContent=if (com.google.gson.internal.bind.util.ISO8601Utils.checkOffset(date, offset, ':')) , type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=171, mi=0, ci=4, mb=1, cb=1], lineCode=171, lineContent=// second and milliseconds can be optional
if ((date.length()) > offset) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=163, mi=0, ci=1, mb=0, cb=0], lineCode=163, lineContent=offset += 1, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=168, mi=0, ci=1, mb=0, cb=0], lineCode=168, lineContent=offset += 1, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=172, mi=0, ci=4, mb=0, cb=0], lineCode=172, lineContent=char c = date.charAt(offset), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=173, mi=0, ci=9, mb=2, cb=4], lineCode=173, lineContent=if (((c != 'Z') && (c != '+')) && (c != '-')) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=174, mi=0, ci=6, mb=0, cb=0], lineCode=174, lineContent=seconds = com.google.gson.internal.bind.util.ISO8601Utils.parseInt(date, offset, (offset += 2)), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=175, mi=5, ci=3, mb=3, cb=1], lineCode=175, lineContent=if ((seconds > 59) && (seconds < 63))     // truncate up to 3 leap seconds
, type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=177, mi=0, ci=5, mb=0, cb=2], lineCode=177, lineContent=// milliseconds can be optional in the format
if (com.google.gson.internal.bind.util.ISO8601Utils.checkOffset(date, offset, '.')) , type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=175, mi=5, ci=3, mb=3, cb=1], lineCode=175, lineContent=seconds = 59, type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=178, mi=0, ci=1, mb=0, cb=0], lineCode=178, lineContent=offset += 1, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=179, mi=0, ci=6, mb=0, cb=0], lineCode=179, lineContent=int endOffset = com.google.gson.internal.bind.util.ISO8601Utils.indexOfNonDigit(date, (offset + 1))// assume at least one digit
, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=180, mi=0, ci=6, mb=0, cb=0], lineCode=180, lineContent=int parseEndOffset = java.lang.Math.min(endOffset, (offset + 3))// parse up to 3 digits
, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=181, mi=0, ci=5, mb=0, cb=0], lineCode=181, lineContent=int fraction = com.google.gson.internal.bind.util.ISO8601Utils.parseInt(date, offset, parseEndOffset), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=183, mi=0, ci=4, mb=2, cb=1], lineCode=183, lineContent=// compensate for "missing" digits
switch (parseEndOffset - offset) {     // number of digits parsed
    case 2 :
        milliseconds = fraction * 10;
        break;
    case 1 :
        milliseconds = fraction * 100;
        break;
    default :
        milliseconds = fraction;}, type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=193, mi=0, ci=2, mb=0, cb=0], lineCode=193, lineContent=offset = endOffset, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=208, mi=0, ci=2, mb=0, cb=0], lineCode=208, lineContent=timezone = com.google.gson.internal.bind.util.ISO8601Utils.TIMEZONE_UTC, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=209, mi=0, ci=2, mb=0, cb=0], lineCode=209, lineContent=offset += 1, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=210, mi=3, ci=3, mb=3, cb=1], lineCode=210, lineContent=if ((timezoneIndicator == '+') || (timezoneIndicator == '-'))   , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=211, mi=0, ci=4, mb=0, cb=0], lineCode=211, lineContent=java.lang.String timezoneOffset = date.substring(offset), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=214, mi=0, ci=15, mb=0, cb=2], lineCode=214, lineContent=// When timezone has no minutes, we should append it, valid timezones are, for example: +00:00, +0000 and +00
timezoneOffset = ((timezoneOffset.length()) >= 5) ? timezoneOffset : timezoneOffset + "00", type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=216, mi=0, ci=5, mb=0, cb=0], lineCode=216, lineContent=offset += timezoneOffset.length(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=218, mi=0, ci=8, mb=1, cb=3], lineCode=218, lineContent=// 18-Jun-2015, tatu: Minor simplification, skip offset of "+0000"/"+00:00"
if (("+0000".equals(timezoneOffset)) || ("+00:00".equals(timezoneOffset)))   , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=219, mi=0, ci=3, mb=0, cb=0], lineCode=219, lineContent=timezone = com.google.gson.internal.bind.util.ISO8601Utils.TIMEZONE_UTC, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=225, mi=0, ci=9, mb=0, cb=0], lineCode=225, lineContent=// 18-Jun-2015, tatu: Looks like offsets only work from GMT, not UTC...
// not sure why, but that's the way it looks. Further, Javadocs for
// `java.util.TimeZone` specifically instruct use of GMT as base for
// custom timezones... odd.
java.lang.String timezoneId = "GMT" + timezoneOffset, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=228, mi=0, ci=3, mb=0, cb=0], lineCode=228, lineContent=// String timezoneId = "UTC" + timezoneOffset;

timezone = java.util.TimeZone.getTimeZone(timezoneId), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=230, mi=0, ci=3, mb=0, cb=0], lineCode=230, lineContent=java.lang.String act = timezone.getID(), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=231, mi=0, ci=4, mb=0, cb=2], lineCode=231, lineContent=if (!(act.equals(timezoneId))) , type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=237, mi=0, ci=5, mb=0, cb=0], lineCode=237, lineContent=/* 22-Jan-2015, tatu: Looks like canonical version has colons, but we may be given
   one without. If so, don't sweat.
  Yes, very inefficient. Hopefully not hit often.
  If it becomes a perf problem, add 'loose' comparison instead.
 */
java.lang.String cleaned = act.replace(":", ""), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=238, mi=0, ci=4, mb=1, cb=1], lineCode=238, lineContent=if (!(cleaned.equals(timezoneId))) , type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=263, mi=2, ci=0, mb=0, cb=0], lineCode=263, lineContent=fail = e, type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=265, mi=2, ci=0, mb=0, cb=0], lineCode=265, lineContent=fail = e, type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=267, mi=2, ci=0, mb=0, cb=0], lineCode=267, lineContent=fail = e, type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=201, mi=5, ci=0, mb=0, cb=0], lineCode=201, lineContent=throw new java.lang.IllegalArgumentException("No time zone indicator"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=239, mi=12, ci=0, mb=0, cb=0], lineCode=239, lineContent=throw new java.lang.IndexOutOfBoundsException(((("Mismatching time zone indicator: " + timezoneId) + " given, resolves to ") + 
(timezone.getID()))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=245, mi=14, ci=0, mb=0, cb=0], lineCode=245, lineContent=throw new java.lang.IndexOutOfBoundsException((("Invalid time zone indicator '" + timezoneIndicator) + "'")), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=276, mi=2, ci=0, mb=0, cb=0], lineCode=276, lineContent=throw ex, type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=302, mi=5, ci=0, mb=0, cb=0], lineCode=302, lineContent=throw new java.lang.NumberFormatException(value), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=311, mi=15, ci=0, mb=0, cb=0], lineCode=311, lineContent=throw new java.lang.NumberFormatException(("Invalid number: " + (value.substring(beginIndex, endIndex)))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLine [numberLine=318, mi=15, ci=0, mb=0, cb=0], lineCode=318, lineContent=throw new java.lang.NumberFormatException(("Invalid number: " + (value.substring(beginIndex, endIndex)))), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=124], lineCode=123, lineContent=parse(java.lang.String,java.text.ParsePosition) throws java.text.ParseException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.bind.util.ISO8601Utils, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=301], lineCode=300, lineContent=parseInt(java.lang.String,int,int) throws java.lang.NumberFormatException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=44, mi=3, ci=0, mb=0, cb=0], lineCode=44, lineContent=// unsafe couldn't be found, so try using accessible anyway
ao.setAccessible(true), type=TRY, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=57, mi=0, ci=10, mb=0, cb=0], lineCode=57, lineContent=java.lang.reflect.Method method = com.google.gson.internal.reflect.UnsafeReflectionAccessor.unsafeClass.getMethod("objectFieldOffset", java.lang.reflect.Field.class), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=58, mi=0, ci=14, mb=0, cb=0], lineCode=58, lineContent=long overrideOffset = ((java.lang.Long) (method.invoke(theUnsafe, overrideField)))// long overrideOffset = theUnsafe.objectFieldOffset(overrideField);
, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=59, mi=0, ci=18, mb=0, cb=0], lineCode=59, lineContent=java.lang.reflect.Method putBooleanMethod = com.google.gson.internal.reflect.UnsafeReflectionAccessor.unsafeClass.getMethod("putBoolean", java.lang.Object.class, long.class, boolean.class), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=60, mi=0, ci=21, mb=0, cb=0], lineCode=60, lineContent=putBooleanMethod.invoke(theUnsafe, ao, overrideOffset, true)// theUnsafe.putBoolean(ao, overrideOffset, true);
, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=61, mi=0, ci=2, mb=0, cb=0], lineCode=61, lineContent=return true, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=62, mi=1, ci=0, mb=0, cb=0], lineCode=62, lineContent=// do nothing, type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=70, mi=0, ci=3, mb=0, cb=0], lineCode=70, lineContent=com.google.gson.internal.reflect.UnsafeReflectionAccessor.unsafeClass = java.lang.Class.forName("sun.misc.Unsafe"), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=71, mi=0, ci=4, mb=0, cb=0], lineCode=71, lineContent=java.lang.reflect.Field unsafeField = com.google.gson.internal.reflect.UnsafeReflectionAccessor.unsafeClass.getDeclaredField("theUnsafe"), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=72, mi=0, ci=3, mb=0, cb=0], lineCode=72, lineContent=unsafeField.setAccessible(true), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=73, mi=0, ci=4, mb=0, cb=0], lineCode=73, lineContent=return unsafeField.get(null), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=75, mi=2, ci=0, mb=0, cb=0], lineCode=75, lineContent=return null, type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=81, mi=0, ci=4, mb=0, cb=0], lineCode=81, lineContent=return java.lang.reflect.AccessibleObject.class.getDeclaredField("override"), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=83, mi=2, ci=0, mb=0, cb=0], lineCode=83, lineContent=return null, type=CATCH, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.internal.reflect.UnsafeReflectionAccessor, coverageLine=ClassXMLCoverageLine [numberLine=46, mi=15, ci=0, mb=0, cb=0], lineCode=46, lineContent=throw new com.google.gson.JsonIOException(((("Gson couldn't modify fields for " + ao) + 
"\nand sun.misc.Unsafe not found.\nEither write a custom type adapter,") + 
" or make fields accessible, or include sun.misc.Unsafe."), e), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.reflect.TypeToken, coverageLine=ClassXMLCoverageLine [numberLine=84, mi=5, ci=0, mb=0, cb=0], lineCode=84, lineContent=throw new java.lang.RuntimeException("Missing type parameter."), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.reflect.TypeToken, coverageLine=ClassXMLCoverageLine [numberLine=140, mi=18, ci=0, mb=0, cb=0], lineCode=140, lineContent=throw com.google.gson.reflect.TypeToken.buildUnexpectedTypeError(
type, java.lang.Class.class, java.lang.reflect.ParameterizedType.class, java.lang.reflect.GenericArrayType.class), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=952, mi=0, ci=4, mb=0, cb=0], lineCode=952, lineContent=long result = java.lang.Long.parseLong(peekedString), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=953, mi=0, ci=3, mb=0, cb=0], lineCode=953, lineContent=peeked = com.google.gson.stream.JsonReader.PEEKED_NONE, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=954, mi=0, ci=11, mb=0, cb=0], lineCode=954, lineContent=(pathIndices[((stackSize) - 1)])++, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=955, mi=0, ci=2, mb=0, cb=0], lineCode=955, lineContent=return result, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1189, mi=0, ci=4, mb=0, cb=0], lineCode=1189, lineContent=result = java.lang.Integer.parseInt(peekedString), type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1190, mi=0, ci=3, mb=0, cb=0], lineCode=1190, lineContent=peeked = com.google.gson.stream.JsonReader.PEEKED_NONE, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1191, mi=0, ci=11, mb=0, cb=0], lineCode=1191, lineContent=(pathIndices[((stackSize) - 1)])++, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1192, mi=0, ci=2, mb=0, cb=0], lineCode=1192, lineContent=return result, type=TRY, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=291, mi=0, ci=5, mb=0, cb=0], lineCode=291, lineContent=throw new java.lang.NullPointerException("in == null"), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=350, mi=0, ci=16, mb=0, cb=0], lineCode=350, lineContent=throw new java.lang.IllegalStateException((("Expected BEGIN_ARRAY but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=368, mi=0, ci=16, mb=0, cb=0], lineCode=368, lineContent=throw new java.lang.IllegalStateException((("Expected END_ARRAY but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=385, mi=0, ci=16, mb=0, cb=0], lineCode=385, lineContent=throw new java.lang.IllegalStateException((("Expected BEGIN_OBJECT but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=404, mi=0, ci=16, mb=0, cb=0], lineCode=404, lineContent=throw new java.lang.IllegalStateException((("Expected END_OBJECT but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=457, mi=4, ci=0, mb=0, cb=0], lineCode=457, lineContent=throw new java.lang.AssertionError(), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=476, mi=4, ci=0, mb=0, cb=0], lineCode=476, lineContent=throw syntaxError("Unterminated array"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=491, mi=4, ci=0, mb=0, cb=0], lineCode=491, lineContent=throw syntaxError("Unterminated object"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=505, mi=4, ci=0, mb=0, cb=0], lineCode=505, lineContent=throw syntaxError("Expected name"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=513, mi=4, ci=0, mb=0, cb=0], lineCode=513, lineContent=throw syntaxError("Expected name"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=530, mi=4, ci=0, mb=0, cb=0], lineCode=530, lineContent=throw syntaxError("Expected ':'"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=546, mi=0, ci=5, mb=0, cb=0], lineCode=546, lineContent=throw new java.lang.IllegalStateException("JsonReader is closed"), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=564, mi=4, ci=0, mb=0, cb=0], lineCode=564, lineContent=throw syntaxError("Unexpected value"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=590, mi=4, ci=0, mb=0, cb=0], lineCode=590, lineContent=throw syntaxError("Expected value"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=789, mi=0, ci=16, mb=0, cb=0], lineCode=789, lineContent=throw new java.lang.IllegalStateException((("Expected a name but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=825, mi=0, ci=16, mb=0, cb=0], lineCode=825, lineContent=throw new java.lang.IllegalStateException((("Expected a string but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=853, mi=0, ci=16, mb=0, cb=0], lineCode=853, lineContent=throw new java.lang.IllegalStateException((("Expected a boolean but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=872, mi=0, ci=16, mb=0, cb=0], lineCode=872, lineContent=throw new java.lang.IllegalStateException((("Expected null but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=905, mi=0, ci=16, mb=0, cb=0], lineCode=905, lineContent=throw new java.lang.IllegalStateException((("Expected a double but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=911, mi=0, ci=10, mb=0, cb=0], lineCode=911, lineContent=throw new com.google.gson.stream.MalformedJsonException(
(("JSON forbids NaN and infinities: " + result) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=960, mi=0, ci=16, mb=0, cb=0], lineCode=960, lineContent=throw new java.lang.IllegalStateException((("Expected a long but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=967, mi=0, ci=16, mb=0, cb=0], lineCode=967, lineContent=// Make sure no precision was lost casting to 'long'.
throw new java.lang.NumberFormatException((("Expected a long but was " + (peekedString)) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1031, mi=4, ci=0, mb=0, cb=0], lineCode=1031, lineContent=throw syntaxError("Unterminated string"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1119, mi=4, ci=0, mb=0, cb=0], lineCode=1119, lineContent=throw syntaxError("Unterminated string"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1172, mi=0, ci=16, mb=0, cb=0], lineCode=1172, lineContent=// Make sure no precision was lost casting to 'int'.
throw new java.lang.NumberFormatException((("Expected an int but was " + (peekedLong)) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1197, mi=0, ci=16, mb=0, cb=0], lineCode=1197, lineContent=throw new java.lang.IllegalStateException((("Expected an int but was " + (peek())) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1204, mi=0, ci=16, mb=0, cb=0], lineCode=1204, lineContent=// Make sure no precision was lost casting to 'int'.
throw new java.lang.NumberFormatException((("Expected an int but was " + (peekedString)) + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1367, mi=4, ci=0, mb=0, cb=0], lineCode=1367, lineContent=throw syntaxError("Unterminated comment"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1401, mi=0, ci=13, mb=0, cb=0], lineCode=1401, lineContent=throw new java.io.EOFException(("End of input" + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1409, mi=4, ci=0, mb=0, cb=0], lineCode=1409, lineContent=throw syntaxError("Use JsonReader.setLenient(true) to accept malformed JSON"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1505, mi=4, ci=0, mb=0, cb=0], lineCode=1505, lineContent=throw syntaxError("Unterminated escape sequence"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1512, mi=4, ci=0, mb=0, cb=0], lineCode=1512, lineContent=throw syntaxError("Unterminated escape sequence"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1526, mi=0, ci=19, mb=0, cb=0], lineCode=1526, lineContent=throw new java.lang.NumberFormatException(("\\u" + (new java.lang.String(buffer, pos, 4)))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1559, mi=4, ci=0, mb=0, cb=0], lineCode=1559, lineContent=// throw error when none of the above cases are matched
throw syntaxError("Invalid escape sequence"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLine [numberLine=1568, mi=0, ci=13, mb=0, cb=0], lineCode=1568, lineContent=throw new com.google.gson.stream.MalformedJsonException((message + (locationString()))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=341], lineCode=340, lineContent=beginArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=359], lineCode=358, lineContent=endArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=377], lineCode=376, lineContent=beginObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=394], lineCode=393, lineContent=endObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=412], lineCode=411, lineContent=hasNext() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=423], lineCode=422, lineContent=peek() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=462], lineCode=461, lineContent=doPeek() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=599], lineCode=597, lineContent=peekKeyword() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=643], lineCode=641, lineContent=peekNumber() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=745], lineCode=744, lineContent=isLiteral(char) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=777], lineCode=776, lineContent=nextName() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=805], lineCode=804, lineContent=nextString() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=840], lineCode=839, lineContent=nextBoolean() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=864], lineCode=863, lineContent=nextNull() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=886], lineCode=885, lineContent=nextDouble() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=931], lineCode=930, lineContent=nextLong() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=987], lineCode=985, lineContent=nextQuotedValue(char) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1041], lineCode=1040, lineContent=nextUnquotedValue() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1097], lineCode=1095, lineContent=skipQuotedValue(char) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1124], lineCode=1122, lineContent=skipUnquotedValue() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1163], lineCode=1162, lineContent=nextInt() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1216], lineCode=1215, lineContent=close() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1228], lineCode=1227, lineContent=skipValue() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1284], lineCode=1283, lineContent=fillBuffer(int) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1327], lineCode=1318, lineContent=nextNonWhitespace(boolean) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1408], lineCode=1407, lineContent=checkLenient() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1419], lineCode=1418, lineContent=skipToEndOfLine() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1435], lineCode=1434, lineContent=skipTo(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1504], lineCode=1503, lineContent=readEscapeCharacter() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1568], lineCode=1567, lineContent=syntaxError(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonReader, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=1576], lineCode=1574, lineContent=consumeNonExecutePrefix() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=199, mi=5, ci=0, mb=0, cb=0], lineCode=199, lineContent=throw new java.lang.NullPointerException("out == null"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=339, mi=0, ci=5, mb=0, cb=0], lineCode=339, lineContent=throw new java.lang.IllegalStateException("Nesting problem."), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=342, mi=0, ci=13, mb=0, cb=0], lineCode=342, lineContent=throw new java.lang.IllegalStateException(("Dangling name: " + (deferredName))), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=367, mi=0, ci=5, mb=0, cb=0], lineCode=367, lineContent=throw new java.lang.IllegalStateException("JsonWriter is closed."), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=387, mi=0, ci=5, mb=0, cb=0], lineCode=387, lineContent=throw new java.lang.NullPointerException("name == null"), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=390, mi=0, ci=4, mb=0, cb=0], lineCode=390, lineContent=throw new java.lang.IllegalStateException(), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=393, mi=0, ci=5, mb=0, cb=0], lineCode=393, lineContent=throw new java.lang.IllegalStateException("JsonWriter is closed."), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=496, mi=0, ci=12, mb=0, cb=0], lineCode=496, lineContent=throw new java.lang.IllegalArgumentException(("Numeric values must be finite, but was " + value)), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=531, mi=0, ci=12, mb=0, cb=0], lineCode=531, lineContent=throw new java.lang.IllegalArgumentException(("Numeric values must be finite, but was " + value)), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=544, mi=0, ci=5, mb=0, cb=0], lineCode=544, lineContent=throw new java.lang.IllegalStateException("JsonWriter is closed."), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=559, mi=5, ci=0, mb=0, cb=0], lineCode=559, lineContent=throw new java.io.IOException("Incomplete document"), type=THROW, coveraged=false], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=616, mi=0, ci=5, mb=0, cb=0], lineCode=616, lineContent=// not in an object!
throw new java.lang.IllegalStateException("Nesting problem."), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=632, mi=0, ci=5, mb=0, cb=0], lineCode=632, lineContent=throw new java.lang.IllegalStateException(
"JSON must have only one top-level value."), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLine [numberLine=656, mi=0, ci=5, mb=0, cb=0], lineCode=656, lineContent=throw new java.lang.IllegalStateException("Nesting problem."), type=THROW, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=287], lineCode=286, lineContent=beginArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=297], lineCode=296, lineContent=endArray() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=307], lineCode=306, lineContent=beginObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=317], lineCode=316, lineContent=endObject() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=325], lineCode=324, lineContent=open(int,java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=337], lineCode=335, lineContent=close(int,int,java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=386], lineCode=385, lineContent=name(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=400], lineCode=399, lineContent=writeDeferredName() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=414], lineCode=413, lineContent=value(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=431], lineCode=430, lineContent=jsonValue(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=446], lineCode=445, lineContent=nullValue() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=465], lineCode=464, lineContent=value(boolean) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=477], lineCode=476, lineContent=value(java.lang.Boolean) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=494], lineCode=493, lineContent=value(double) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=509], lineCode=508, lineContent=value(long) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=523], lineCode=522, lineContent=value(java.lang.Number) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=543], lineCode=542, lineContent=flush() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=555], lineCode=554, lineContent=close() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=565], lineCode=564, lineContent=string(java.lang.String) throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=597], lineCode=596, lineContent=newline() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=612], lineCode=611, lineContent=beforeName() throws java.io.IOException, , type=THROWS, coveraged=true], CoverageResult [project=gson-2.8.5, className=com.google.gson.stream.JsonWriter, coverageLine=ClassXMLCoverageLineMethod [mm=0, cm=1, getNumberLine()=629], lineCode=628, lineContent=beforeValue() throws java.io.IOException, , type=THROWS, coveraged=true]]
